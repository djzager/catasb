---
- name: Set default for 3.11+ compatibility flag
  set_fact: is_311_plus=false

- name: Set compatibility flag for 3.11+
  when: not("v3.6" in origin_image_tag) and
        not("v3.7" in origin_image_tag) and
        not("v3.9" in origin_image_tag) and
        not("v3.10" in origin_image_tag)
  set_fact: is_311_plus=true

- name: Run OLM tasks
  when: is_311_plus
  block:
  - name: "Clone Operator Lifecycle Manager (OLM) project"
    git:
      depth: 1
      force: true
      repo: "{{ olm_repo }}"
      dest: "{{ olm_repo_dest }}"
      version: "{{ olm_repo_version }}"

  - name: Create OLM working tmp dir
    tempfile:
      state: directory
    register: _olm_tmp_dir

  - set_fact:
      _olm_manifests: "{{ _olm_tmp_dir.path }}/olm"

  - set_fact:
      _osb_cat_manifests: "{{ _olm_tmp_dir.path }}/osb"

  - file:
      path: "{{ _olm_manifests }}"
      state: directory

  - file:
      path: "{{ _osb_cat_manifests }}"
      state: directory

  - copy:
      src: "{{ olm_repo_dest }}/deploy/okd/manifests/{{ olm_version }}/"
      dest: "{{ _olm_manifests }}"

  - name: "Override OLM images"
    when: olm_image_tag_override != ""
    replace:
      path: "{{ _olm_manifests }}/{{ item }}"
      regexp: "@sha.*$"
      replace: ":{{ olm_image_tag_override }}"
    with_items:
      - 0000_30_10-olm-operator.deployment.yaml
      - 0000_30_11-catalog-operator.deployment.yaml
      - 0000_30_13-packageserver.yaml

  - name: Deploy Operator Lifecycle Manager (OLM)
    shell: "{{ oc_cmd }} create -f {{ _olm_manifests }}"

  - name: Install OSB catalog
    when: olm_enable_osb_catalog
    shell: "{{ oc_cmd }} create -f {{ role_path }}/files/{{ item }}"
    with_items:
      - osb-operators.catalogsource.yaml
      - osb-operators.configmap.upstream.yaml

  #############################################################################
  # The broker's SA requires the admin ClusterRole binding; simply
  # granting exactly the *rules* that it uses from this ClusterRole is NOT
  # sufficient. The reason is that in order for the broker to be able to bind
  # the generic "edit" or "admin" role to the APB's sandbox, the broker's SA
  # also requires ALL of the rules that either of these roles are able to grant.
  # Otherwise, the broker would effectively be granting rules to the sandbox
  # that itself does not have, which is obviously forbidden.
  #
  # TODO: In the future, when OLM supports "Operator Bundles", or arbitrary
  # objects in addition to what's expressed in the CSV, we can apply this
  # bundle this binding object. Feature ticket: https://jira.coreos.com/browse/ALM-667
  #
  # HACK: We'll use catasb instead to create the binding, with the constraint
  # that the broker MUST be created in the prepped namespace; here we'll
  # use "automation-broker".
  #
  - name: "Bind automation-broker:automation-broker admin ClusterRole"
    shell: "{{ oc_cmd }} create clusterrolebinding automation-broker-admin --clusterrole=admin --serviceaccount=automation-broker:automation-broker"
  ##############################################################################

  - name: Deploy OpenShift Admin Console for interacting with OLM on 3.11+
    when: deploy_admin_console == true
    block:
    - name: Create admin-console namespace
      shell: "{{ oc_cmd }} new-project admin-console"

    - name: Create admin-console-sa service account
      shell: "{{ oc_cmd }} create serviceaccount admin-console-sa -n admin-console"

    - name: Assign cluster-admin role to admin-console-sa
      shell: "{{ oc_cmd }} create clusterrolebinding admin-console-sa --clusterrole=cluster-admin --serviceaccount=admin-console:admin-console-sa"

    - name: Create deployment of OpenShift Admin Console from {{ admin_console_image }}
      shell: "{{ oc_cmd }} new-app --docker-image {{ admin_console_image }} --name=origin-console -n admin-console"

    - name: Patch origin-console deployment config to use admin-console-sa service account
      shell: "{{ oc_cmd }} patch dc origin-console --patch '{\"spec\":{\"template\":{\"spec\":{\"serviceAccountName\": \"admin-console-sa\"}}}}' -n admin-console"

    - name: Create admin-console service
      shell: "{{ oc_cmd }} expose dc origin-console --port 9000 -n admin-console"

    - name: Create admin-console route
      shell: "{{ oc_cmd }} expose svc origin-console -n admin-console"

    - name: Record URL endpoint for origin-console route
      shell: "{{ oc_cmd }} get route origin-console --template=\"{{'{{'}}.spec.host{{'}}'}}\""
      register: result

    - set_fact: admin_console_url="{{ result.stdout }}"
